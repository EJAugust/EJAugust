{
 "L": [
  "icon.png",
  "index.html",
  "manifest.json",
  "script.js",
  "style.css",
  "window.css",
  "meta.json",
  "shelfbtn.css",
  "test.css",
  "blue-grid.png",
  "white-grid.png",
  "editor.h",
  "ball.png",
  "global.css",
  "tasks.html",
  "part.css",
  "portfolio.css",
  "font.woff2",
  "corner-menu.css",
  "console.css"
 ],
 "M": {
  "core-parts": {
   "core-": "^core parts^('window.css') core-parts-panes dev-tools \"log('Hello World!')\""
  },
  "dev-tools": {
   "core-": "':host{ margin: var(--huh) var(huw); padding-bottom: var(--u2h); background: var(--white-paper); box-shadow: var(--paper-shadow); position: fixed; bottom:0; right:0; display: flex; flex-flow: row nowrap;}:host>* {grid-column: span 3; grid-row: span 3;} :host::after { content: \"ServiceWorker\"; display: block; height: var(--u2h); color: black; position: absolute; bottom: 0; left: 0; padding-left: var(--uw); box-sizing: border-box; font: var(--kireji-sans); background: var(--vellum-white); width: 100%; border-radius: inherit; }'"
  },
  "ejaugust-com": {
   "core-": "^Eric Augustinowicz | ^('portfolio.css') tab-group"
  },
  "home-tab": {
   "tab-group": "`<b>Home!</b>`"
  },
  "kireji-app": {
   "core-": "^kireji\\^app^('window.css')shelf- editor- status-"
  },
  "kireji-io": {
   "core-": "^kireji io^('window.css')shelf- editor-io status-"
  },
  "limit-": {
   "limit-": "':host { font: var(--kireji-sans); text-align: center; background: tomato; border-radius: 50%; display:inline-block; width: var(--uw); height: var(--uh); vertical-align: middle; margin-left: var(--huw); margin-right: var(--huw); transition: transform 0.2s; } :host(:hover) { cursor: pointer; transform: scale(150%); }'`âˆž`"
  },
  "refetch-btn": {
   "dev-tools": "`<shelf-btn icon=ball.png onclick=refetch()>Refetch</shelf-btn>`"
  },
  "unregister-btn": {
   "dev-tools": "`<shelf-btn icon=ball.png onclick=unregister()>Unregister</shelf-btn>`"
  },
  "core-parts-panes": {
   "core-": "':host{ position: fixed; width: calc(var(--vw) - var(--u2w)); height: calc(var(--vh) - var(--u2h)); box-shadow: var(--paper-shadow); top: var(--uh); left: var(--uw); box-sizing: border-box; background: var(--white-paper); background-color: var(--vellum-white); border-radius: var(--inner-corners); }'core-parts-list part-editor"
  },
  "part-editor":{
   "core-":"console-"
  },
  "console-":{
   "core-":"('console.css')\"when('log',msg=>{this.go('h',`<console-log>${msg}</console-log>`, node)})\""
  },
  "console-log":{
   "core-":"':host{font: var(--kireji-sans); display: block;  }'\"return innerHTML.wrap('`')\""
  },
  "core-parts-list": {
   "core-": "('corner-menu.css')\"return `\\`${parts.map(i=>`<part- i=${i}></part->`).join('')}\\``\""
  },
  "points-list":{
   "core-": "':host{ max-height: 100%; display:flex; flex-flow: column nowrap; padding: var(--huh) var(--huw) var(--huh) var(--huw); gap: var(--uh); overflow: hidden; overflow-y: scroll; } point- { flex: 0 0 min-content; height: min-content; }'\"return `<point- x=${origin_point.x}></point->`.wrap('`')\""
  },
  "point-": {
   "core-": "':host{ display:flex; flex-flow: column nowrap; padding: var(--huh) var(--huw) var(--huh) var(--huw); gap: var(--uh); } point-, sample- { flex: 0 0 min-content; height: min-content; }'\"return `<sample- onclick='const sample_p = getPoint(${this.x}), subject_p = getPoint(${x}); sample_p.go(\\`h\\`, this.innerHTML+subject_p.getChildren().map(xx=>\\`<point- x=\\${xx}></point->\\`).join(\\\"\\\"), this.hostNode);this.remove()'><label>${x}</label></sample->`.wrap('`')\""
  },
  "sample-": {
   "core-":"\"return innerHTML.wrap('`')\""
  },
  "part-": {
   "core-": "('part.css')\"if (!i) return; return `<label onclick=\\\"this.flip('open');this.drive('open');\\\">${i}</label>`.wrap('`');\""
  },
  "model-": {
   "core-": "':host{display:flex;flex-flow:column nowrap;} part-exp{white-space: pre nowrap; font-family: monospace; } part-exp:before {content:attr(ii); width: calc(6 * var(--uw)); display: inline-block; }'\"const data = model.M[i]; return Object.keys(data).map(ii=>`<part-exp i=${i} ii=${ii}></part-exp>`).join('').wrap('`')\""
  },
  "part-exp": {
   "core-": "'pre { margin:0; height: calc(3 * var(--u2h)); padding:0; }'\"return `<part-op>${ungroup(model.M[i][ii]).map(cmd=>websafe(cmd)).join('</part-op>&nbsp;<part-op>')}</part-op>`.wrap('`')\""
  },
  "part-op": {
   "core-": "\"return innerHTML.wrap('`')\""
  },
  "code-block": {
   "core-": "\"return [...innerHTML].map(char=>`<char->${char}</char->`).join('').wrap('`')\""
  },
  "char-": {
   "core-": "\"return innerHTML.wrap('`') \""
  },
  "bug-list": {
   "editor-io": "`<h2>Bugs:</h2>`"
  },
  "bug-0001": {
   "bug-list": "bug-item",
   "core-": "`The bug list lacks features.`"
  },
  "part-reference": {
   "core-": "`<`\"console.log('part-ref',node)\"`>`"
  },
  "bug-item": {
   "core-": "\"if(inside('bug-list')) return '`<b>BUG:</b> This bug isn\\'t updating.`'\""
  },
  "task-list": {
   "editor-io": "(`tasks.html`)"
  },
  "task-234": {
   "task-list": "task-item",
   "core-": "`Understand Tasks`"
  },
  "path-view": {
   "editor-": "\"return '`<part-reference>Hello World</part-reference>`'\""
  },
  "multi-part": {
   "core-": "`<i>Some kinda multi part.</i>`",
   "bug-item": "`<b>Am I a bug?</b>`",
   "task-item": "`<b>Am I a task?</b>`"
  },
  "task-item": {
   "core-": "\"if(inside('task-list')) return '`<b>-></b> Ready to appear`'\""
  },
  "library-": {
   "editor-": "`<b>I am in the library view.</b>`"
  },
  "editor-": {
   "core-": "(editor.h)"
  },
  "model-editor": {
   "editor-": "`This is the model editor!`"
  },
  "width-": {
   "core-": "':host:after { content: counter(width) }'"
  },
  "height-": {
   "core-": "':host:after { content: counter(height) }'"
  },
  "touch-count": {
   "core-": "':host:after { content: counter(touches) }'"
  },
  "status-": {
   "core-": "':host{display: grid; grid-template-columns: repeat(calc(var(--initial-width) - 4), var(--uw)); grid-template-rows: repeat(3, var(--uh));}'width-`x`height-`&nbsp;(`touch-count`&nbsp;touches)`kireji-badge"
  },
  "kireji-badge": {
   "core-": "`<iframe src=//kireji.io/badge/></iframe>`"
  },
  "crock-": {
   "crock-": "`and then `"
  },
  "crock-a": {
   "crock-b": "`me to `"
  },
  "crock-b": {
   "crock-a": "`you to `"
  },
  "part-crock": {
   "core-": "`There is no proof that '`part-crock`'`"
  },
  "shelf-btn": {
   "core-": "('shelfbtn.css')\"return`\\`<img src=\\\"${icon}\\\"><label>${innerHTML}</label>\\``\""
  },
  "shelf-": {
   "core-": "':host>* {grid-column: span 3; grid-row: span 3;}:host{display: grid; grid-template-columns: repeat(calc(var(--initial-width) - 4), var(--uw)); grid-template-rows: repeat(3, var(--uh));}'"
  }
 },
 "host": {
  "core.parts": "core-parts",
  "kireji.io": "kireji-io",
  "kireji.app": "kireji-app",
  "ejaugust.com": "ejaugust-com"
 },
 "i": "core-",
 "r": "((?:(?:'(?:\\\\'|[^'])*')|(?:\"(?:\\\\\"|[^\"])*\")|(?:\\^(?:(?:\\\\\\^)|[^^])*\\^)|(?:`(?:\\\\`|[^`])*`)|[\\w-_]+|(?:\\([^\\)]*\\))))"
}